<?php

/**
 * @file
 * Preprocess functions for Stanford Starter.
 */

use Drupal\ui_patterns\Element\PatternContext;

/**
 * Prepares variables for the html.html.twig template.
 */
function lbretransportation_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = \Drupal::service('extension.list.theme')
    ->getPath('stanford_basic');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function lbretransportation_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'lbretransportation_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function lbretransportation_subtheme_preprocess_pattern_hero(array &$variables): void {
  /** @var \Drupal\ui_patterns\Element\PatternContext $context */
  $context = &$variables['context'];
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $context->getProperty('entity');
  if ($paragraph) {
    $extra_classes = [
      $paragraph->getBehaviorSetting('react_paragraphs:banner_style', 'layout', 'layout--default'),
      $paragraph->getBehaviorSetting('react_paragraphs:banner_style', 'color_scheme', 'color--cardinal-red'),
    ];
    /** @var \Drupal\Core\Template\Attribute $attributes */
    $attributes = &$variables['attributes'];
    $attributes->addClass($extra_classes);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function lbretransportation_subtheme_preprocess_paragraph__stanford_lists(array &$variables): void {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = &$variables['paragraph'];
  $existing_classes = $variables['attributes']['class'] ?? [];

  if ($paragraph) {
    $extra_classes = [
      $paragraph->getBehaviorSetting('react_paragraphs:lists_style', 'cards_color', 'cards-color--light'),
    ];
    $variables['attributes']['class'] = array_merge($existing_classes, $extra_classes);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function lbretransportation_subtheme_preprocess_paragraph__stanford_wysiwyg(array &$variables): void {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = &$variables['paragraph'];
  $existing_classes = $variables['attributes']['class'] ?? [];
  $extra_classes = [
    $paragraph->getBehaviorSetting('react_paragraphs:wysiwyg_style', 'style', 'style--default'),
    $paragraph->getBehaviorSetting('react_paragraphs:wysiwyg_style', 'color_scheme', 'color--default'),
  ];
  $variables['attributes']['class'] = array_merge($existing_classes, $extra_classes);
}

/**
 * Implements hook_ui_patterns_suggestions_alter().
 */
function lbretransportation_subtheme_ui_patterns_suggestions_alter(array &$suggestions, array $variables, PatternContext $context): void {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */

  // Replace dash with underscore from the theme suggestions array in order for the templates to work properly.
  foreach ($suggestions as &$value) {
    $value = str_replace('-', '_', $value);
  }
  // Unset the reference to avoid potential side effects.
  unset($value);

  if ($variables['theme_hook_original']  == 'pattern_card') {
    $node = $variables["context"]->getProperty('entity');
    if ($node->bundle() == 'stanford_page' && $node->hasField('su_shared_tags')) {
      $is_shuttle_route = in_array('406', array_map(function ($value) { return $value['target_id']; }, $node->su_shared_tags->getValue()));
      $suggestions[] = $variables['theme_hook_original'] . '__shuttle';
    }
  }

  $paragraph = $context->getProperty('entity');
  if ($paragraph && $paragraph->bundle() === "stanford_banner") {
    $layout = $paragraph->getBehaviorSetting('react_paragraphs:banner_style', 'layout', 'layout--default');

    $suggestions[] = $variables['theme_hook_original'] . '__layout_' . str_replace('-', '_', $layout);

    // Add variant preview theme suggestion.
    if ($context->isOfType('preview')) {
      $suggestions[] = $variables['theme_hook_original'] . '__layout_' . str_replace('-', '_', $layout) . '__preview';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function lbretransportation_subtheme_preprocess(&$variables, $hook) {
  if ($hook == "pattern_news-vertical-teaser") {
    $node = $variables["context"]->getProperty('entity');
    // Add date to the card.
    if ($node && !$node->get('su_news_publishing_date')->isEmpty()) {
      $variables['news_publishing_date'] = $node->su_news_publishing_date->date->format('F d, Y');
    }
  }

  if ($hook == "pattern_card") {
    $node = $variables["context"]->getProperty('entity');
    switch ($node->label()) {
      case "Line RWC":
        $variables['card_theme'] = 'light-red';
        $variables["card_theme_label"] = t('RWC');
          break;
      case "Line AE-F":
        $variables['card_theme'] = 'gray';
        $variables["card_theme_label"] = t('AE-F');
          break;
      case "Line C":
        $variables['card_theme'] = 'cyan';
        $variables["card_theme_label"] = t('C');
          break;
      case "East Bay Express":
        $variables['card_theme'] = 'blue';
        $variables["card_theme_label"] = t('EB');
          break;
      case "Hospital: Direct":
        $variables['card_theme'] = 'blue-green';
        $variables["card_theme_label"] = t('HD');
          break;
      case "Medical Center":
        $variables['card_theme'] = 'violet';
        $variables["card_theme_label"] = t('MC');
          break;
      case "Oak Creek Apartments":
        $variables['card_theme'] = 'dark-gray';
        $variables["card_theme_label"] = t('OCA');
          break;
      case "Line P":
        $variables['card_theme'] = 'light-green';
        $variables["card_theme_label"] = t('P');
          break;
      case "Research Park":
        $variables['card_theme'] = 'dark-green';
        $variables["card_theme_label"] = t('RP');
          break;
      case "Line S":
        $variables['card_theme'] = 'brown-green';
        $variables["card_theme_label"] = t('S');
          break;
      case "Shopping Express":
        $variables['card_theme'] = 'pink';
        $variables["card_theme_label"] = t('SE');
          break;
      case "SLAC":
        $variables['card_theme'] = 'green';
        $variables["card_theme_label"] = t('SLAC');
          break;
      case "Line X (Counter-Clockwise)":
        $variables['card_theme'] = 'red';
        $variables["card_theme_label"] = t('X');
          break;
      case "Line Y (Clockwise)":
        $variables['card_theme'] = 'red';
        $variables["card_theme_label"] = t('Y');
          break;
      default:
        break;
      
    }
  }
}
